@use './variables' as *;
@use './utils' as *;

@import './colors.scss';
@import './typography.scss';
@import './color_scheme.scss';

/* Base tags */
html,
body {
  max-width: 100vw;
  margin: 0;
  overflow: auto;

  max-width: 2000px;
  margin: auto;
}

body {
  position: relative;

  min-height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

main {
  display: flex;
  flex-direction: column;
  align-items: center;
}

button {
  @include flex-center;

  background-color: unset;
  border: unset;
  border-radius: $border-radius;
  cursor: pointer;
}

.btn-primary {
  @extend .primary-container;
  &:hover {
    background-color: color-mix(in srgb, var(--primaryContainer), var(--onPrimaryContainer) 8%);
  }
  &:active {
    background-color: color-mix(in srgb, var(--primaryContainer), var(--onPrimaryContainer) 10%);
  }
}

.btn-secondary {
  @extend .secondary-container;
  &:hover {
    background-color: color-mix(in srgb, var(--secondaryContainer), var(--onSecondaryContainer) 8%);
  }
  &:active {
    background-color: color-mix(in srgb, var(--secondaryContainer), var(--onSecondaryContainer) 10%);
  }
}

.divider {
  height: 1px;
  background-color: var(--outlineVariant);
  width: 50%;
  margin: 10px auto;
}

.chip {
  user-select: none;
  white-space: nowrap;
  padding: 0px 10px;
  border-radius: 10px;
}

article {
  max-width: min(65ch, 100%);
  margin: auto;
}

p > code {
  background-color: var(--secondaryContainer);
  color: var(--onSecondaryContainer);
  padding: 2px;
  border-radius: 3px;
}

// transition colors for ColorPicker
* {
  transition: color 0.3s ease-in-out;
  transition: background-color 0.3s ease-in-out;
}
